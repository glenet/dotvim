//
// Board part
a. declare resource and platform device

// Driver part
b. create init func to call platform_add_devices
c. call sub_initcall to init devices
d. declare platform driver
e. call platform_driver_register with related device name
f. call platform_driver probe func after register success

// Driver Part
module_init(sii9234_init); //sii9234.c
	i2c_add_driver(&sii9234_driver)

static struct i2c_driver sii9234_driver = {
    .id_table = sii9234_i2c_id,
    .probe = sii9234_probe,
    .remove = sii9234_remove,
#ifndef CONFIG_HAS_EARLYSUSPEND
    .suspend = sii9234_suspend,
    .resume = sii9234_resume,
#endif
    .driver = {
        .name = MHL_SII9234_I2C_NAME,
        .owner = THIS_MODULE,
    },
};

static int sii9234_probe(struct i2c_client *client
	pInfo->pwrCtrl = pdata->power; // <- board part: mhl_sii_device_data = {
														.power = mhl_sii_power



